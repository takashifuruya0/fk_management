# ------------------------
# ConfigMap
# ------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: sample-configmap
data:
  message: "Hello, ConfigMap"
  message2: "OK"
  message3: "NG"
  DB_HOST: "127.0.0.1"

---
# ------------------------
# PersistentVolumeClaim
# ------------------------
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
    name: static-pvc
spec:
    accessModes:
      # - ReadWriteOnce
      - ReadOnlyMany
    resources:
        requests:
            storage: 1Gi

---
# ------------------------
# Deployment
# ------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fk-management-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fk-management-app
  template:
    metadata:
      labels:
        app: fk-management-app
    spec:
      volumes:
        - name: envfile
          secret:
            secretName: secret-test
        - name: static
          persistentVolumeClaim:
            claimName: static-pvc
      containers:
        - name: fk-management-container
          image: tfuruya/fk_management:_VERSION
          imagePullPolicy: Always
          command:
            - "python3"
          args: [
              "manage.py", "runserver", "0.0.0.0:8000", "--settings=fk_management.environment.develop"
          ]
          ports:
            - containerPort: 8000
          volumeMounts:
            - name: envfile
              mountPath: "/home/fk_management/env"
              readOnly: true
            - name: static-pvc
              mountPath:  "/home/fk_management/static"
          lifecycle:
            postStart:
              exec:
                command: [
                  "python3", "manage.py", "collectstatic", "--noinput"
                ]
          resources:
            limits:
              memory: 256Mi
              cpu: "0.5"
            requests:
              memory: 32Mi
              cpu: "0.1"
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.16
          imagePullPolicy: Always
          command:
            - "/cloud_sql_proxy"
          args:
            - "-instances=fmanage-202213:asia-northeast1:cloudsql-fk-management=tcp:0.0.0.0:5432"
          ports:
            - containerPort: 5432
          resources:
            limits:
              memory: 256Mi
              cpu: "0.5"
            requests:
              memory: 32Mi
              cpu: "0.1"

---
# ------------------------
# Service: ClusterIP
# ------------------------
apiVersion: v1
kind: Service
metadata:
  name: fk-management-externalip
spec:
  type: ClusterIP 
  ports:
    - name: "http-port"
      protocol: "TCP"
      port: 80
      targetPort: 8000
  selector:
    app: fk-management-app


---
# ------------------------
# Service: NodePort
# ------------------------
apiVersion: v1
kind: Service
metadata:
  name: fk-management-externalip2
spec:
  type: NodePort
  ports:
    - name: "http-port"
      protocol: "TCP"
      port: 80
      targetPort: 8000
      nodePort: 30002
  selector:
    app: fk-management-app


---
# ------------------------
# Service ExternalName 
# ------------------------
apiVersion: v1
kind: Service
metadata:
  name: database-service
spec:
  type: ExternalName
  externalName: my.database.example.com

