# Generated by Django 3.2.3 on 2021-08-29 12:07

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_currentuser.db.models.fields
import django_currentuser.middleware


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('last_updated_at', models.DateTimeField(auto_now=True, verbose_name='最終更新日時')),
                ('is_active', models.BooleanField(default=True, verbose_name='有効')),
                ('legacy_id', models.IntegerField(blank=True, null=True, verbose_name='旧ID')),
                ('entry_type', models.CharField(choices=[('短期', '短期'), ('中期', '中期'), ('長期', '長期')], default='中期', max_length=255, verbose_name='種別')),
                ('status', models.CharField(choices=[('01.BeforeEntry', '01.BeforeEntry'), ('11.Open', '11.Open'), ('21.CloseWon', '21.CloseWon'), ('22.CloseLost', '22.CloseLost')], default='01.BeforeEntry', max_length=255, verbose_name='ステータス')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='メモ')),
                ('is_closed', models.BooleanField(default=False, help_text='終了したEntryかどうか', verbose_name='終了フラグ')),
                ('is_nisa', models.BooleanField(default=False, help_text='NISA口座かどうか', verbose_name='NISAフラグ')),
                ('is_plan', models.BooleanField(default=False, help_text='EntryPlanかどうか', verbose_name='計画フラグ')),
                ('border_loss_cut', models.FloatField(blank=True, null=True, verbose_name='損切株価')),
                ('border_profit_determination', models.FloatField(blank=True, null=True, verbose_name='利確株価')),
                ('num_plan', models.IntegerField(blank=True, null=True, verbose_name='予定口数')),
                ('val_plan', models.FloatField(blank=True, null=True, verbose_name='予定Entry株価')),
                ('created_by', django_currentuser.db.models.fields.CurrentUserField(blank=True, default=django_currentuser.middleware.get_current_authenticated_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='asset_entry_created_by', to=settings.AUTH_USER_MODEL, verbose_name='作成者')),
                ('last_updated_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, on_update=True, related_name='asset_entry_last_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='最終更新者')),
            ],
            options={
                'verbose_name': 'エントリー',
                'verbose_name_plural': 'エントリー',
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('last_updated_at', models.DateTimeField(auto_now=True, verbose_name='最終更新日時')),
                ('is_active', models.BooleanField(default=True, verbose_name='有効')),
                ('legacy_id', models.IntegerField(blank=True, null=True, verbose_name='旧ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='銘柄コード')),
                ('name', models.CharField(max_length=255, verbose_name='銘柄名')),
                ('is_trust', models.BooleanField(default=False, verbose_name='投資信託フラグ')),
                ('market', models.CharField(blank=True, max_length=255, null=True, verbose_name='市場')),
                ('industry', models.CharField(blank=True, max_length=255, null=True, verbose_name='産業')),
                ('feature', models.CharField(blank=True, max_length=100, null=True, verbose_name='特色')),
                ('consolidated_business', models.CharField(blank=True, max_length=100, null=True, verbose_name='連結事業')),
                ('settlement_date', models.CharField(blank=True, max_length=10, null=True, verbose_name='決算月')),
                ('unit', models.CharField(blank=True, max_length=10, null=True, verbose_name='単元株数')),
                ('is_listed', models.BooleanField(default=True, verbose_name='上場済みフラグ')),
                ('created_by', django_currentuser.db.models.fields.CurrentUserField(blank=True, default=django_currentuser.middleware.get_current_authenticated_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='asset_stock_created_by', to=settings.AUTH_USER_MODEL, verbose_name='作成者')),
                ('last_updated_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, on_update=True, related_name='asset_stock_last_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='最終更新者')),
            ],
            options={
                'verbose_name': '銘柄',
                'verbose_name_plural': '銘柄',
            },
        ),
        migrations.CreateModel(
            name='StockValueData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('last_updated_at', models.DateTimeField(auto_now=True, verbose_name='最終更新日時')),
                ('is_active', models.BooleanField(default=True, verbose_name='有効')),
                ('legacy_id', models.IntegerField(blank=True, null=True, verbose_name='旧ID')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='日付')),
                ('val_high', models.FloatField(verbose_name='高値')),
                ('val_low', models.FloatField(verbose_name='低値')),
                ('val_open', models.FloatField(verbose_name='始値')),
                ('val_close', models.FloatField(verbose_name='終値')),
                ('turnover', models.FloatField(verbose_name='出来高')),
                ('created_by', django_currentuser.db.models.fields.CurrentUserField(blank=True, default=django_currentuser.middleware.get_current_authenticated_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='asset_stockvaluedata_created_by', to=settings.AUTH_USER_MODEL, verbose_name='作成者')),
                ('last_updated_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, on_update=True, related_name='asset_stockvaluedata_last_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='最終更新者')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='asset.stock', verbose_name='銘柄')),
            ],
            options={
                'verbose_name': '銘柄日次情報',
                'verbose_name_plural': '銘柄日次情報',
            },
        ),
        migrations.CreateModel(
            name='StockAnalysisData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('last_updated_at', models.DateTimeField(auto_now=True, verbose_name='最終更新日時')),
                ('is_active', models.BooleanField(default=True, verbose_name='有効')),
                ('legacy_id', models.IntegerField(blank=True, null=True, verbose_name='旧ID')),
                ('date', models.DateField(verbose_name='日付')),
                ('val_close_dy', models.FloatField(verbose_name='終値前日比')),
                ('val_close_dy_pct', models.FloatField(verbose_name='終値前日比率')),
                ('turnover_dy', models.FloatField(verbose_name='出来高前日比')),
                ('turnover_dy_pct', models.FloatField(verbose_name='出来高前日比率')),
                ('val_line', models.FloatField(verbose_name='ローソク長')),
                ('val_line_pct', models.FloatField(verbose_name='ローソク長率')),
                ('is_positive', models.BooleanField(verbose_name='陽線')),
                ('lower_mustache', models.FloatField(verbose_name='下ヒゲ')),
                ('upper_mustache', models.FloatField(verbose_name='上ヒゲ')),
                ('ma05', models.FloatField(verbose_name='移動平均（5日）')),
                ('ma25', models.FloatField(verbose_name='移動平均（25日）')),
                ('ma75', models.FloatField(verbose_name='移動平均（75日）')),
                ('ma05_diff', models.FloatField(help_text='終値ー5日移動平均', verbose_name='移動平均乖離（5日）')),
                ('ma25_diff', models.FloatField(help_text='終値ー25日移動平均', verbose_name='移動平均乖離（25日）')),
                ('ma75_diff', models.FloatField(help_text='終値ー75日移動平均', verbose_name='移動平均乖離（75日）')),
                ('ma05_diff_pct', models.FloatField(verbose_name='移動平均乖離率（5日）')),
                ('ma25_diff_pct', models.FloatField(verbose_name='移動平均乖離率（25日）')),
                ('ma75_diff_pct', models.FloatField(verbose_name='移動平均乖離率（75日）')),
                ('sigma25', models.FloatField(verbose_name='標準偏差（25日）')),
                ('ma25_p2sigma', models.FloatField(verbose_name='ボリンジャーバンド+2σ（25日）')),
                ('ma25_m2sigma', models.FloatField(verbose_name='ボリンジャーバンド-2σ（25日）')),
                ('is_upper05', models.BooleanField(help_text='前日移動平均値より上（5日）', verbose_name='上昇傾向（5日）')),
                ('is_upper25', models.BooleanField(help_text='前日移動平均値より上（25日）', verbose_name='上昇傾向（25日）')),
                ('is_upper75', models.BooleanField(help_text='前日移動平均値より上（75日）', verbose_name='上昇傾向（75日）')),
                ('is_takuri', models.BooleanField(default=False, help_text='長い下ヒゲ陰線', verbose_name='たくり線')),
                ('is_tsutsumi', models.BooleanField(default=False, help_text='前日ローソクを包み込む、大きいローソク', verbose_name='包線')),
                ('is_harami', models.BooleanField(default=False, help_text='前日ローソクに包まれる、小さいローソク', verbose_name='はらみ線')),
                ('is_age_sanpo', models.BooleanField(default=False, help_text='大陽線後→3本のローソクが収まる→最初の陽線終値をブレイク', verbose_name='上げ三法')),
                ('is_sage_sanpo', models.BooleanField(default=False, help_text='大陰線後→3本のローソクが収まる→最初の陰線終値を割り込み', verbose_name='下げ三法')),
                ('is_sanku_tatakikomi', models.BooleanField(default=False, help_text='3日連続の窓開き下落', verbose_name='三空叩き込み')),
                ('is_sante_daiinsen', models.BooleanField(default=False, help_text='3日連続の大陰線', verbose_name='三手大陰線')),
                ('created_by', django_currentuser.db.models.fields.CurrentUserField(blank=True, default=django_currentuser.middleware.get_current_authenticated_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='asset_stockanalysisdata_created_by', to=settings.AUTH_USER_MODEL, verbose_name='作成者')),
                ('last_updated_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, on_update=True, related_name='asset_stockanalysisdata_last_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='最終更新者')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='asset.stock', verbose_name='銘柄')),
                ('svd', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='asset.stockvaluedata', verbose_name='SVD')),
            ],
            options={
                'verbose_name': '銘柄分析情報',
                'verbose_name_plural': '銘柄分析情報',
            },
        ),
        migrations.CreateModel(
            name='ReasonWinLoss',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('last_updated_at', models.DateTimeField(auto_now=True, verbose_name='最終更新日時')),
                ('is_active', models.BooleanField(default=True, verbose_name='有効')),
                ('legacy_id', models.IntegerField(blank=True, null=True, verbose_name='旧ID')),
                ('is_win', models.BooleanField(verbose_name='勝ちフラグ')),
                ('name', models.CharField(max_length=255, verbose_name='名前')),
                ('memo', models.CharField(blank=True, max_length=255, null=True, verbose_name='メモ')),
                ('created_by', django_currentuser.db.models.fields.CurrentUserField(blank=True, default=django_currentuser.middleware.get_current_authenticated_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='asset_reasonwinloss_created_by', to=settings.AUTH_USER_MODEL, verbose_name='作成者')),
                ('last_updated_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, on_update=True, related_name='asset_reasonwinloss_last_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='最終更新者')),
            ],
            options={
                'verbose_name': '理由',
                'verbose_name_plural': '理由',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('last_updated_at', models.DateTimeField(auto_now=True, verbose_name='最終更新日時')),
                ('is_active', models.BooleanField(default=True, verbose_name='有効')),
                ('legacy_id', models.IntegerField(blank=True, null=True, verbose_name='旧ID')),
                ('datetime', models.DateTimeField(verbose_name='日時')),
                ('is_nisa', models.BooleanField(default=False, verbose_name='NISAフラグ')),
                ('is_buy', models.BooleanField(verbose_name='買注文フラグ')),
                ('num', models.IntegerField(verbose_name='口数')),
                ('val', models.FloatField(help_text='投資信託は一口当たり単価', verbose_name='株価')),
                ('commission', models.IntegerField(verbose_name='手数料')),
                ('chart', models.ImageField(blank=True, null=True, upload_to='images/', verbose_name='チャート')),
                ('created_by', django_currentuser.db.models.fields.CurrentUserField(blank=True, default=django_currentuser.middleware.get_current_authenticated_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='asset_order_created_by', to=settings.AUTH_USER_MODEL, verbose_name='作成者')),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='asset.entry', verbose_name='エントリー')),
                ('last_updated_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, on_update=True, related_name='asset_order_last_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='最終更新者')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='asset.stock', verbose_name='銘柄')),
            ],
            options={
                'verbose_name': '売買注文',
                'verbose_name_plural': '売買注文',
            },
        ),
        migrations.CreateModel(
            name='Ipo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('last_updated_at', models.DateTimeField(auto_now=True, verbose_name='最終更新日時')),
                ('is_active', models.BooleanField(default=True, verbose_name='有効')),
                ('legacy_id', models.IntegerField(blank=True, null=True, verbose_name='旧ID')),
                ('datetime_open', models.DateTimeField(blank=True, null=True, verbose_name='ブックビル開始日時')),
                ('datetime_close', models.DateTimeField(blank=True, null=True, verbose_name='ブックビル終了日時')),
                ('status', models.CharField(choices=[('0.起票', '0.起票'), ('1.評価中', '1.評価中'), ('2.申込済', '2.申込済'), ('3.落選（上場前）', '3.落選（上場前）'), ('3.当選（上場前）', '3.当選（上場前）'), ('4.落選（上場後）', '4.落選（上場後）'), ('4.当選（上場後）', '4.当選（上場後）')], default='0.起票', max_length=255, verbose_name='ステータス')),
                ('val_list', models.FloatField(blank=True, null=True, verbose_name='発行価格')),
                ('date_list', models.DateField(blank=True, null=True, verbose_name='上場日')),
                ('datetime_select', models.DateTimeField(blank=True, null=True, verbose_name='抽選開始日時')),
                ('is_applied', models.BooleanField(default=False, verbose_name='申込済')),
                ('date_applied', models.DateField(blank=True, null=True, verbose_name='申込日')),
                ('num_applied', models.IntegerField(blank=True, null=True, verbose_name='申込数')),
                ('point', models.IntegerField(blank=True, default=None, null=True, verbose_name='使用ポイント数')),
                ('result_select', models.CharField(blank=True, default='抽選待ち', max_length=255, null=True, verbose_name='抽選結果')),
                ('datetime_purchase_open', models.DateTimeField(blank=True, null=True, verbose_name='購入意思表示開始日時')),
                ('datetime_purchase_close', models.DateTimeField(blank=True, null=True, verbose_name='購入意思表示終了日時')),
                ('result_buy', models.CharField(blank=True, max_length=255, null=True, verbose_name='購入結果')),
                ('num_select', models.IntegerField(blank=True, null=True, verbose_name='当選数')),
                ('rank', models.CharField(blank=True, choices=[('S', 'S'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=1, null=True, verbose_name='評価')),
                ('val_predicted', models.FloatField(blank=True, null=True, verbose_name='予想初値')),
                ('url', models.URLField(blank=True, null=True, verbose_name='評価詳細URL')),
                ('val_initial', models.FloatField(blank=True, null=True, verbose_name='上場後初値')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='メモ')),
                ('created_by', django_currentuser.db.models.fields.CurrentUserField(blank=True, default=django_currentuser.middleware.get_current_authenticated_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='asset_ipo_created_by', to=settings.AUTH_USER_MODEL, verbose_name='作成者')),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='asset.entry', verbose_name='Entry')),
                ('last_updated_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, on_update=True, related_name='asset_ipo_last_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='最終更新者')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='asset.stock', verbose_name='銘柄')),
            ],
            options={
                'verbose_name': 'IPO',
                'verbose_name_plural': 'IPO',
            },
        ),
        migrations.AddField(
            model_name='entry',
            name='reason_win_loss',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='asset.reasonwinloss', verbose_name='理由'),
        ),
        migrations.AddField(
            model_name='entry',
            name='stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='asset.stock', verbose_name='銘柄'),
        ),
        migrations.CreateModel(
            name='Dividend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('last_updated_at', models.DateTimeField(auto_now=True, verbose_name='最終更新日時')),
                ('is_active', models.BooleanField(default=True, verbose_name='有効')),
                ('legacy_id', models.IntegerField(blank=True, null=True, verbose_name='旧ID')),
                ('date', models.DateField(verbose_name='配当日')),
                ('val_unit', models.IntegerField(verbose_name='配当単価')),
                ('unit', models.IntegerField(verbose_name='配当単位数')),
                ('val', models.IntegerField(verbose_name='配当総額（税引前）')),
                ('tax', models.IntegerField(verbose_name='税額')),
                ('created_by', django_currentuser.db.models.fields.CurrentUserField(blank=True, default=django_currentuser.middleware.get_current_authenticated_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='asset_dividend_created_by', to=settings.AUTH_USER_MODEL, verbose_name='作成者')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='asset.entry', verbose_name='Entry')),
                ('last_updated_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, on_update=True, related_name='asset_dividend_last_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='最終更新者')),
            ],
            options={
                'verbose_name': '配当',
                'verbose_name_plural': '配当',
            },
        ),
        migrations.CreateModel(
            name='AssetTarget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('last_updated_at', models.DateTimeField(auto_now=True, verbose_name='最終更新日時')),
                ('is_active', models.BooleanField(default=True, verbose_name='有効')),
                ('legacy_id', models.IntegerField(blank=True, null=True, verbose_name='旧ID')),
                ('date', models.DateField(unique=True, verbose_name='日付')),
                ('val_investment', models.IntegerField(verbose_name='予定投資元本')),
                ('val_target', models.IntegerField(verbose_name='投資目標')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='メモ')),
                ('created_by', django_currentuser.db.models.fields.CurrentUserField(blank=True, default=django_currentuser.middleware.get_current_authenticated_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='asset_assettarget_created_by', to=settings.AUTH_USER_MODEL, verbose_name='作成者')),
                ('last_updated_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, on_update=True, related_name='asset_assettarget_last_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='最終更新者')),
            ],
            options={
                'verbose_name': '投資目標',
                'verbose_name_plural': '投資目標',
            },
        ),
        migrations.CreateModel(
            name='AssetStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('last_updated_at', models.DateTimeField(auto_now=True, verbose_name='最終更新日時')),
                ('is_active', models.BooleanField(default=True, verbose_name='有効')),
                ('legacy_id', models.IntegerField(blank=True, null=True, verbose_name='旧ID')),
                ('date', models.DateField(unique=True, verbose_name='日付')),
                ('buying_power', models.IntegerField(verbose_name='買付余力')),
                ('investment', models.IntegerField(verbose_name='投資元本')),
                ('nisa_power', models.IntegerField(verbose_name='NISA余力')),
                ('sum_stock', models.IntegerField(verbose_name='株合計')),
                ('sum_trust', models.IntegerField(verbose_name='投資信託合計')),
                ('sum_other', models.IntegerField(verbose_name='その他合計')),
                ('created_by', django_currentuser.db.models.fields.CurrentUserField(blank=True, default=django_currentuser.middleware.get_current_authenticated_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='asset_assetstatus_created_by', to=settings.AUTH_USER_MODEL, verbose_name='作成者')),
                ('last_updated_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, on_update=True, related_name='asset_assetstatus_last_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='最終更新者')),
            ],
            options={
                'verbose_name': '投資状況',
                'verbose_name_plural': '投資状況',
            },
        ),
    ]
